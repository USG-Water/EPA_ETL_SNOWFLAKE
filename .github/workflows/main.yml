name: EPA Data Pipeline

on:
  # Run every 6 weeks (on Sundays at 2 AM UTC)
  schedule:
    - cron: '0 2 */42 * SUN'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Enable debug logging'
        required: false
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'

env:
  PYTHON_VERSION: '3.9'
  
jobs:
  epa-sdwa-etl:
    name: EPA SDWA Data ETL
    runs-on: ubuntu-latest
    timeout-minutes: 120
    
    # Environment protection rules can be set up in GitHub settings
    environment: production
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Set Debug Mode
        if: github.event.inputs.debug_enabled == 'true'
        run: echo "DEBUG_MODE=true" >> $GITHUB_ENV
      
      - name: Run EPA SDWA ETL
        env:
          # Snowflake connection parameters from repository secrets
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_PRIVATE_KEY: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
          SNOWFLAKE_PRIVATE_KEY_PASSPHRASE: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_PASSPHRASE }}
        run: |
          echo "Starting EPA SDWA ETL process..."
          echo "Timestamp: $(date)"
          
          # Run the ETL script
          python scripts/epa_sdwa_loader.py
          
          # Capture exit code
          EXIT_CODE=$?
          
          echo "ETL process completed with exit code: $EXIT_CODE"
          exit $EXIT_CODE
      
      - name: Upload Logs on Failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: etl-failure-logs
          path: |
            *.log
            /tmp/epa_data_*
          retention-days: 7
      
      - name: Send Success Notification
        if: success()
        run: |
          echo "✅ EPA SDWA ETL completed successfully"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run Number: ${{ github.run_number }}"
      
      - name: Send Failure Notification
        if: failure()
        run: |
          echo "❌ EPA SDWA ETL failed"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run Number: ${{ github.run_number }}"
          echo "Please check the logs for details"

  # Optional: Add other EPA data sources as separate jobs
  # epa-other-etl:
  #   name: EPA Other Data ETL
  #   runs-on: ubuntu-latest
  #   needs: epa-sdwa-etl  # Run after SDWA completes
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3
  #     # Add steps for other EPA data sources

# Workflow notifications can be enhanced with:
# - Slack notifications using slack-github-action
# - Email notifications using custom actions
# - Teams notifications
# - PagerDuty alerts for failures
